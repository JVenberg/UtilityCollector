"""Initial database schema

Revision ID: 72e6404685d0
Revises:
Create Date: 2025-06-19 17:12:02.785207

"""

import sqlalchemy as sa
import sqlmodel
from alembic import op

# revision identifiers, used by Alembic.
revision = "72e6404685d0"
down_revision = None
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "bill",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("bill_date", sqlmodel.sql.sqltypes.AutoString(), nullable=False),
        sa.Column("due_date", sqlmodel.sql.sqltypes.AutoString(), nullable=False),
        sa.Column("total_amount", sa.Float(), nullable=False),
        sa.Column("pdf_path", sqlmodel.sql.sqltypes.AutoString(), nullable=False),
        sa.Column("status", sqlmodel.sql.sqltypes.AutoString(), nullable=False),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("pdf_path"),
    )
    op.create_table(
        "unit",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("name", sqlmodel.sql.sqltypes.AutoString(), nullable=False),
        sa.Column("sqft", sa.Integer(), nullable=False),
        sa.Column("submeter_id", sqlmodel.sql.sqltypes.AutoString(), nullable=False),
        sa.Column("email", sqlmodel.sql.sqltypes.AutoString(), nullable=False),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("name"),
    )
    op.create_table(
        "invoice",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("total_amount", sa.Float(), nullable=False),
        sa.Column("payment_status", sqlmodel.sql.sqltypes.AutoString(), nullable=False),
        sa.Column("unit_id", sa.Integer(), nullable=False),
        sa.Column("bill_id", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ["bill_id"],
            ["bill.id"],
        ),
        sa.ForeignKeyConstraint(
            ["unit_id"],
            ["unit.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "trashcan",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("service_type", sqlmodel.sql.sqltypes.AutoString(), nullable=False),
        sa.Column("size", sa.Integer(), nullable=False),
        sa.Column("unit_id", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ["unit_id"],
            ["unit.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "lineitem",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("description", sqlmodel.sql.sqltypes.AutoString(), nullable=False),
        sa.Column("cost", sa.Float(), nullable=False),
        sa.Column("is_adjustment", sa.Boolean(), nullable=False),
        sa.Column("invoice_id", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ["invoice_id"],
            ["invoice.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table("lineitem")
    op.drop_table("trashcan")
    op.drop_table("invoice")
    op.drop_table("unit")
    op.drop_table("bill")
    # ### end Alembic commands ###
